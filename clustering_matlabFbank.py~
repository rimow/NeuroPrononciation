
import matplotlib.pyplot as plt
import operator
from sklearn.decomposition import PCA
import scipy.io as sio
from sklearn.cluster import KMeans
import numpy as np
import math
import utiles
import analyse

# Read mat file and align file.
filename = './data/Bref80_L4M01.mat'
alignfile = './data/Bref80_L4M01.aligned'
fbank = sio.loadmat(filename)['d1']
pho = preprocess.create_reference(fbank,alignfile)

#Kmeans without initialization 3 classes
n_clusters = 3
kmeans = KMeans(init='k-means++', n_clusters=n_clusters, n_init=10)
kmeans.fit(fbank)
centroids = kmeans.cluster_centers_
labels = kmeans.labels_
analyse.pourcentage(pho,n_clusters,labels,"../classement",0)

#Kmeans without initialization 3 classes
n_clusters = 3
kmeans = KMeans(init='k-means++', n_clusters=n_clusters, n_init=10)
kmeans.fit(fbank)
centroids = kmeans.cluster_centers_
labels = kmeans.labels_
analyse.pourcentage(pho,n_clusters,labels,"../classement",1)

#Kmeans withous initialzation 6 classes

n_clusters = 6
kmeans = KMeans(init='k-means++', n_clusters=n_clusters, n_init=10)
kmeans.fit(fbank)
centroids = kmeans.cluster_centers_
labels = kmeans.labels_
analyse.pourcentage(pho,n_clusters,labels,"../classement",2)




